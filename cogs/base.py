import discord
from discord.ext import commands
from discord import app_commands
from discord.ui.view import View
from discord.app_commands import Choice
import random
from data.users import User
from data import db_session


class BaseCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name='start', description='–ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ')
    @app_commands.describe(nickname="–ù–∏–∫–Ω–µ–π–º")
    async def start(self, ctx: discord.Interaction, nickname: str):
        db_sess = db_session.create_session()
        user = db_sess.query(User).filter(User.user_id == ctx.user.id).first()
        if user == None:
            user = User()
            user.name = nickname
            user.user_id = ctx.user.id
            user.avatar_link = "https://cdn.discordapp.com/attachments/777609425534976020/1088825888205967440/20220819_103235.gif"
            user.expirience = 0
            user.coins = 0
            user.tesseracts = 0
            user.rank = "None"
            db_sess.add(user)
            db_sess.commit()
            await ctx.response.send_message(content="–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω‚úÖ")
        else:
            await ctx.response.send_message(content="–ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ —Å–æ–∑–¥–∞–Ω")

    @app_commands.command(name='change_avatar', description='–ò–∑–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É –ø—Ä–æ—Ñ–∏–ª—è')
    @app_commands.describe(link="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–Ω–≥/–≥–∏—Ñ")
    async def change_avatar(self, ctx: discord.Interaction, link: str):
        db_sess = db_session.create_session()
        user = db_sess.query(User).filter(User.user_id == ctx.user.id).first()
        if user:
            user.avatar_link = link
            db_sess.commit()
            await ctx.response.send_message(content="–ê–≤—Ç–∞—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞")
        else:
            await ctx.response.send_message(content="–ü—Ä–æ—Ñ–∏–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç‚õî, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start")

    @app_commands.command(name='help', description='–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º')
    async def help(self, ctx: discord.Interaction):
        base = discord.Embed(title="–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–¥—ã",
                             color=discord.Colour.random())
        base_commands = {"/start": "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
                         "/change_avatar": "–ò–∑–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø—Ä–æ—Ñ–∏–ª—è",
                         "/change_name": "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è –ø—Ä–æ—Ñ–∏–ª—è",
                         "/del_acc": "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
                         "/info": "–í—ã–≤–µ—Å—Ç–∏ —Å–≤–µ–¥–µ–Ω–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ",
                         "/start": "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"}
        combat = discord.Embed(title="–ö–æ–º–∞–Ω–¥—ã —Å—Ä–∞–∂–µ–Ω–∏–π",
                               color=discord.Colour.random())
        combat_commands = {"/start": "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
                           "/change_avatar": "–ò–∑–º–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø—Ä–æ—Ñ–∏–ª—è",
                           "/del_acc": "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
                           "/info": "–í—ã–≤–µ—Å—Ç–∏ —Å–≤–µ–¥–µ–Ω–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ",
                           "/start": "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"}
        economy = discord.Embed(title="–ö–æ–º–∞–Ω–¥—ã —ç–∫–æ–Ω–æ–º–∏–∫–∏",
                                color=discord.Colour.random())
        economy_commands = {"/start": "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
                            "/change_avatar": "–ò–∑–º–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø—Ä–æ—Ñ–∏–ª—è",
                            "/del_acc": "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
                            "/info": "–í—ã–≤–µ—Å—Ç–∏ —Å–≤–µ–¥–µ–Ω–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ",
                            "/start": "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"}
        for i in base_commands:
            base.add_field(name=i, value=base_commands[i])
        for i in combat_commands:
            combat.add_field(name=i, value=combat_commands[i])
        for i in economy_commands:
            economy.add_field(name=i, value=economy_commands[i])
        embed_list = [base, combat, economy]
        await ctx.response.send_message(embeds=embed_list)

    @app_commands.command(name='leader_table', description='–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤')
    async def leader_table(self, ctx: discord.Interaction):
        db_sess = db_session.create_session()
        users = db_sess.query(User).order_by(User.expirience).all()[::-1]
        embed = discord.Embed(title="üí£–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤üí£", description="–õ—É—á—à–∏–µ –∏–≥—Ä–æ–∫–∏ –ø–æ –æ–ø—ã—Ç—É",
                              color=discord.Colour.random())
        for i in range(len(users)):
            if i < 3:
                number = str(i + 1) + (3 - i) * 'üòà'
            else:
                number = str(i + 1)
            embed.add_field(name=f"{number}: {users[i].name} : {users[i].expirience} –æ–ø—ã—Ç–∞", value="", inline=False)
        await ctx.response.send_message(embed=embed)

    @app_commands.command(name='exp_plus', description='–î–æ–±–∞–≤–∏—Ç—å –æ–ø—ã—Ç')
    @app_commands.describe(exp="–ï–∫—Å–ø–∞")
    async def exp_plus(self, ctx: discord.Interaction, exp: int):
        db_sess = db_session.create_session()
        user = db_sess.query(User).filter(User.user_id == ctx.user.id).first()
        user.expirience += exp
        db_sess.commit()
        if user:
            await ctx.response.send_message(content=f"–î–æ–±–∞–≤–ª–µ–Ω–æ {exp} –æ–ø—ã—Ç–∞")

    @app_commands.command(name='del_acc', description='–ë–ï–ó–í–û–ó–†–ê–¢–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ê–ö–ö–ê–£–ù–¢–ê‚ùå‚ùå‚ùå')
    async def del_acc(self, ctx: discord.Interaction):
        db_sess = db_session.create_session()
        user = db_sess.query(User).filter(User.user_id == ctx.user.id).first()
        if user:
            db_sess.delete(user)
            db_sess.commit()
            await ctx.response.send_message(content="–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        else:
            await ctx.response.send_message(content="–ê–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    @app_commands.command(name='change_name', description='–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏')
    @app_commands.describe(nickname="–ù–æ–≤–æ–µ –∏–º—è")
    async def change_name(self, ctx: discord.Interaction, nickname: str):
        db_sess = db_session.create_session()
        user = db_sess.query(User).filter(User.user_id == ctx.user.id).first()
        if user:
            user.name = nickname
            db_sess.commit()
            await ctx.response.send_message(content="–ò–º—è –∏–∑–º–µ–Ω–µ–Ω–æ")
        else:
            await ctx.response.send_message(content="–ê–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    @app_commands.command(name='info', description='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ')
    async def player_info(self, ctx: discord.Interaction):
        db_sess = db_session.create_session()
        user = db_sess.query(User).filter(User.user_id == ctx.user.id).first()
        if user:
            embed = discord.Embed(title=user.name, description="–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å",
                                  color=discord.Colour.blurple())
            exp = f"‚≠ê–û–ø—ã—Ç: {await exp_write(user.expirience)}"
            lvl = f"üìç–£—Ä–æ–≤–µ–Ω—å: {await lvl_write(user.expirience)}"
            coins = f"üìÄ–ú–æ–Ω–µ—Ç—ã: {user.coins}"
            tesseracts = f"üî≥–¢–µ—Å—Å–µ—Ä–∞–∫—Ç—ã: {user.tesseracts}"
            first_list = [exp, lvl]
            second_list = [" ", coins, tesseracts]
            embed.add_field(name="–°—Ç–∞—Ç—ãüìä", value='\n'.join(
                first_list), inline=True)
            embed.add_field(name="", value='\n'.join(
                second_list), inline=True)
            embed.set_thumbnail(url=user.avatar_link)
            await ctx.response.send_message(embed=embed)
        else:
            await ctx.response.send_message(content="–ü—Ä–æ—Ñ–∏–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç‚õî, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start")


async def lvl_write(exp):
    exp_list = [i * 50 + 100 for i in range(100)]
    for i in range(len(exp_list)):
        if exp < exp_list[i]:
            return i
    return len(exp_list)


async def exp_write(exp):
    exp_list = [i * 50 + 100 for i in range(100)]
    for i in range(len(exp_list)):
        if exp < exp_list[i]:
            return f"{exp}/{exp_list[i]}"
    return f"{exp}/‚àû"


async def setup(bot):
    await bot.add_cog(BaseCommands(bot), guilds=[discord.Object(id=806157869040140288)])
    #await bot.add_cog(BaseCommands(bot))
